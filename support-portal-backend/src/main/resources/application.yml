server:
  error:
    path: /error
#    whitelabel:
#      enabled: false

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${PORTAL_MAIL_USERNAME:fake.user@gmail.com}
    password: ${PORTAL_MAIL_PASSWORD:fake_password}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql:3306/support-portal
    username: ENC(criE3etnc/EVZbizNgNdmj+8F0BYC3bSVBK1VT/xJ7WMoNvSfdEGsqWfCpaX5lEWvXLOO8pzgjdB5zIOBcTikw==)
    password: ENC(OTG4nZfio2dHHxV0Ey/Nmb4XeEfaD1YMsRVQxOwF59Q1JSBZPUKLWXORJXPz2RysKRngcdk2SgioAMw166DoqA==)
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
app:
  public-urls: /user/login,/user/register,/user/*/profile-image/**
  cors:
    allowed-origins: http://localhost:4200,https://localhost:4200,http://art-support-portal.s3-website.eu-north-1.amazonaws.com,http://portal.shyshkin.net
  jwt:
    secret: ENC(EfWSJqncgjSJ0g/tMzLoO9PlrjmpQf8Eb+q51SUXlh3AzwMHJyTF1gV0VpuNEQkNb9Lsw62xOBnxDNe73BsPDQ==)
#    secret: ${random.value} #Does not work - every time generates new value
jasypt:
  encryptor:
    password: ${JASYPT_PASSWORD}
    algorithm: PBEWITHHMACSHA512ANDAES_256
    iv-generator-classname: org.jasypt.iv.RandomIvGenerator

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://localhost:23306/support-portal
  jpa:
    show-sql: true
logging:
  level:
    net.shyshkin: debug

---
spring:
  config:
    activate:
      on-profile: aws-local
  datasource:
    url: jdbc:mysql://localhost:3306/support_portal
    username: support_portal_user
    password: Supp0rt_Porta!_P@ssword
  mail:
    host: email-smtp.eu-north-1.amazonaws.com
    port: 587
    username: AKIAVW7XGDOWFHHCELIH
    password: BJyWOWS1xWYR35MRCFn3BuuQ6vY+k7DRsdAvOfqDs/Fk

# we want to test (1) from localhost, (2) from S3 bucket Static Web Site, (3) from our EC2 instance
app:
  email:
    from: d.art.shishkin@gmail.com
    carbon-copy: d.art.shishkin@gmail.com
  cors:
    allowed-origins: http://localhost:4200,http://art-support-portal.s3-website.eu-north-1.amazonaws.com,http://support-portal.shyshkin.net,http://portal.shyshkin.net
server:
  port: 5000
logging:
  level:
    net.shyshkin: debug

---
spring:
  config:
    activate:
      on-profile: aws-rds
  datasource:
    url: jdbc:mysql://portal-db.coaum9neetxc.eu-north-1.rds.amazonaws.com:3306/support_portal
    username: ENC(MPap/iQmyyLSeulVzLLq4nQ5dcwMyJ1cbW+bW7MOU4pN7CHQULbaDn8/5VszOP9F)
    password: ENC(nC0PV+0wPW+73o2uOh4Zg7EA34vdwZKpkPD4CIKvjDDXQ+dGXjykTuHUl3jlxkRC/00IpFurk/UJ9hTpZ6QqGA==)
  mail:
    host: email-smtp.eu-north-1.amazonaws.com
    port: 587
    username: ENC(CgaSXOMqTmswes1PgAYp3ICcoIVVXyKUlDR1Se963Vja02cBIor/2884e2OEFKW4XhBClTbuZCVdHK0vRRNqYg==)
    password: ENC(GA8XsfU8vmat/7A8qEhrVz0Y47THxNT8jQ29wSg035fozwW7m+fKhJMQd4tgxL9dPfOzSXYzkffL0fG1AihWiHl99H9iBeXndDSvOhskvh4=)

# we want to test (1) from localhost, (2) from S3 bucket Static Web Site, (3) from our EC2 instance
app:
  email:
    from: d.art.shishkin@gmail.com
    carbon-copy: d.art.shishkin@gmail.com
  cors:
    allowed-origins: http://localhost:4200,http://art-support-portal.s3-website.eu-north-1.amazonaws.com,http://support-portal.shyshkin.net,http://portal.shyshkin.net
server:
  port: 5000
logging:
  level:
    net.shyshkin: debug

#####
#
# HTTPS configuration
#
#####

server.ssl:
  enabled: true               # Enable HTTPS support (only accept HTTPS requests)
  key-alias: securedPortal         # Alias that identifies the key in the key store
  key-store: classpath:securedPortal-keystore.p12  # Keystore location
  key-store-password: ENC(nqDHyVFmySdbaCOZfj4EiQLRYyLSPLRLq/OzncqlsFIuWvh8caiOapAb+zrKR1+A)  # Keystore password
  key-store-type: PKCS12      # Keystore format

---
spring:
  config:
    activate:
      on-profile: image-s3
app:
  amazon-s3:
    bucket-name: portal-user-profile-images



